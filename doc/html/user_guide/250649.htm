<!DOCTYPE html>
<html lang="ru-RU">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="description" content=""/>
    <meta name="viewport" content="maximum-scale=1.0" />
    <title> Добавление нового типа нейрона </title>
    <script type="text/javascript" src="../langs.js"></script>
    <script type="text/javascript">
        !function ( w, d ) {
            var scriptsPath="";
            d.writeln("\x3Cscript type='text/javascript' src='"+scriptsPath+d.documentElement.lang+".js'>\x3C/script>");
        }( window, document );
    </script>
    <script type="text/javascript" src="toc.js"></script>
    
    <script type="text/javascript" src="aiconverter_result.js"></script>
    <link rel="stylesheet" type='text/css' href="typography.css"/>
    <link rel="stylesheet" type='text/css' href="styles.css"/>
    <link rel="shortcut icon" href="favicon.ico"/>
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon"/>
    <link rel="icon" href="favicon.png" type="image/png"/>

            <!--[if lte IE 9]>
                <link rel="stylesheet" type="text/css" href="bootstrap.css">
            <![endif]-->
            <!--[if lte IE 8]>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js"></script>
            <![endif]-->
            </head>

<body id="who-content">
	<div class="cont">
	<h2 id="t250649" class="heading2">Добавление нового типа нейрона</h2>
<p class="bodytext">На текущий момент Kaspersky Neuromorphic Platform поддерживает наборы свойств и типизацию популяций по моделям нейронов <code class="programcharacter">BLIFATNeuron</code> и <code class="programcharacter">SynapticResourceSTDPBLIFATNeuron</code>. Если требуется, вы можете добавить новый тип нейрона.</p>
<p class="attentionbody">Вы можете использовать эту инструкцию при работе с исходным кодом платформы.</p>
<p class="procedureheading">Чтобы добавить новый тип нейрона:</p>
<ol class="listnumber1"><li class="listnumber1">В директории <code class="programcharacter">neuron-trait-library/include/knp/neuron-traits/</code> создайте заголовочный файл для нового типа нейрона. </li><li class="listnumber1">В созданном заголовочном файле определите структуру типа нейрона и его шаблонные свойства (например, <code class="programcharacter">default_values</code>, <code class="programcharacter">neuron_parameters</code>).<p class="listcontinue1">Пример определения BLIFAT-нейрона:</p>
<p class="codeheadingkos">neuron-trait-library/include/knp/neuron-traits/blifat.h</p>
<p class="programckos">#include &quot;type_traits.h&quot;</p>
<p class="programckos"> </p>
<p class="programckos">namespace knp::neuron_traits</p>
<p class="programckos"> </p>
<p class="programckos">{</p>
<p class="programckos">struct BLIFATNeuron;</p>
<p class="programckos"> </p>
<p class="programckos">template &lt;&gt;</p>
<p class="programckos">struct default_values&lt;BLIFATNeuron&gt;</p>
<p class="programckos"> </p>
<p class="programckos">{</p>
<p class="programckos">    // Задает количество шагов нейронной сети с шага последнего спайка по умолчанию.</p>
<p class="programckos">    constexpr static std::size_t n_time_steps_since_last_firing_ = std::numeric_limits&lt;std::size_t&gt;::infinity();</p>
<p class="programckos">    // Задает значение по умолчанию, к которому стремится мембранный потенциал для тормозных синапсов, основанных на проводимости.</p>
<p class="programckos">    constexpr static double reverse_inhibitory_potential = -0.3;</p>
<p class="programckos">    // Задает значение по умолчанию, к которому стремится мембранный потенциал для тормозных синапсов, основанных на токе.</p>
<p class="programckos">    constexpr static double min_potential = -1.0e9;</p>
<p class="programckos">    ...</p>
<p class="programckos">};</p>
<p class="programckos"></p>
<p class="programckos">template &lt;&gt;</p>
<p class="programckos">struct neuron_parameters&lt;BLIFATNeuron&gt;</p>
<p class="programckos"></p>
<p class="programckos">{</p>
<p class="programckos">    // Задает количество шагов нейронной сети с шага последнего спайка.</p>
<p class="programckos">    std::size_t n_time_steps_since_last_firing_ = default_values&lt;BLIFATNeuron&gt;::n_time_steps_since_last_firing_;</p>
<p class="programckos">    // Задает пороговое значение мембранного потенциала нейрона.</p>
<p class="programckos">    double activation_threshold_ = default_values&lt;BLIFATNeuron&gt;::activation_threshold_;</p>
<p class="programckos">    // Задает динамическое пороговое значение мембранного потенциала, после достижения которого нейрон генерирует спайк.</p>
<p class="programckos">    double dynamic_threshold_ = default_values&lt;BLIFATNeuron&gt;::dynamic_threshold_;</p>
<p class="programckos">    ...</p>
<p class="programckos">};</p>
<p class="programckos"></p>
<p class="programckos">}  // namespace knp::neuron_traits</p>
</li><li class="listnumber1">Добавьте созданный тип нейрона в список нейронов, определенных в заголовочном файле <code class="programcharacter">neuron-trait-library/include/knp/neuron-traits/all_traits.h</code>.<p class="listcontinue1">Пример добавления BLIFAT-нейрона в список нейронов:</p>
<p class="codeheadingkos">neuron-trait-library/include/knp/neuron-traits/all_traits.h</p>
<p class="programckos">#include &quot;blifat.h&quot;</p>
<p class="programckos"> </p>
<p class="programckos">namespace knp::neuron_traits</p>
<p class="programckos"> </p>
<p class="programckos">{</p>
<p class="programckos">// Список типов нейронов, разделенных запятыми.</p>
<p class="programckos">#define ALL_NEURONS BLIFATNeuron</p>
<p class="programckos">...</p>
<p class="programckos">}  // namespace knp::neuron_traits</p>
</li><li class="listnumber1">Реализуйте в нужных бекендах перегруженный метод запуска. <p class="listcontinue1">Например, для бекенда CPU реализуйте перегруженный метод запуска расчета популяций.</p>
</li></ol>


	<a href="#" class="bt-home">В начало</a>
	</div>
</body>

</html>
